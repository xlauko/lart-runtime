language: cpp


os: linux
dist: bionic
sudo: required
cache: ccache

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

stages:
  - name: Latest     # build jobs to run first and always
  - name: Validation # run other jobs
  - name: Legacy     # build with all other supported options

jobs:
  include:


env:
  global:
    - CFLAGS="-Qunused-arguments"
    - CXXFLAGS="-Qunused-arguments"
    - CC=clang-10
    - CXX=clang++10
  matrix:
    - TRAVIS_BUILD_TYPE=Debug
    - TRAVIS_BUILD_TYPE=Release

addons:
  apt:
    sources:
      - sourceline: "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
        key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
      - sourceline: "ppa:ubuntu-toolchain-r/test"
    packages:
      - clang-10
      - ninja-build
      - clang-format

before_install:
  # install cmake
  - sh scripts/travis/install-cmake.sh;
  # - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
  #   CMAKE_URL="https://cmake.org/files/v3.17/cmake-3.17.0-Linux-x86_64.tar.gz";
  #   mkdir -p ${CMAKE_DIR} && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${CMAKE_DIR};
  #   fi
  # # Install Catch2
  # - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
  #   cd "$HOME";
  #   git clone https://github.com/catchorg/Catch2.git;
  #   cd Catch2;
  #   ${CMAKE} -Bbuild -H. -DBUILD_TESTING=OFF;
  #   sudo ${CMAKE} --build build/ --target install;
  #   cd "$TRAVIS_BUILD_DIR";
  #   fi
  # Coveralls
  - pip install --user cpp-coveralls
  # Print some more system information after installing all build tools
  - echo "-------------------- BEGIN SYSTEM INFORMATION --------------------"
  - uname -a
  - lsb_release -a;
  - env
  - which cmake
  - cmake --version
  - which $CC
  - $CC --version
  - which $CXX
  - $CXX --version
  - which ccache
  - ccache --version
  - ccache -s
  - echo "--------------------  END SYSTEM INFORMATION  --------------------"
# before_script:
#   - mkdir build
#   - cd build
#   - ${CMAKE} -G Ninja -DCMAKE_BUILD_TYPE=${TRAVIS_BUILD_TYPE} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DENABLE_SANITIZE=ON ..

# script:
#   - sh ../scripts/travis/clang-format.sh;
#   - ${CMAKE} --build . --verbose
#   - ctest

# after_success:
#   - coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*"
