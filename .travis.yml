language: cpp

dist: bionic
sudo: required
cache: ccache

env:
  - DEPS="${TRAVIS_BUILD_DIR}/deps"
  global:
    - PATH="${DEPS}/cmake/bin:$PATH"

matrix:
  include:
    - os: linux
      addons:
        apt:
          - sourceline: "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
            key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
          - sourceline: "ppa:ubuntu-toolchain-r/test"
        packages:
          - clang-10
        env:
          - CC=clang-10
          - CXX=clang++10
          - CFLAGS="-Qunused-arguments"
          - CXXFLAGS="-Qunused-arguments"
          - TRAVIS_BUILD_TYPE=RelWithDebInfo
    - os: linux
      addons:
        packages:
          - clang-format
        env:
          - STATIC_CHECK="yes"

before_install:
  # Configure ccache and use it also under Linux with clang and clang++
  - export PATH="/usr/lib/ccache/bin/:$PATH"
install:
  # Install recent cmake
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    CMAKE_URL="https://cmake.org/files/v3.17/cmake-3.17.0-Linux-x86_64.tar.gz";
    mkdir -p ${DEPS}/cmake
    travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS}/cmake;
    fi
  # Install Catch2
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    cd "$DEPS";
    git clone https://github.com/catchorg/Catch2.git;
    cd Catch2;
    cmake -Bbuild -H. -DBUILD_TESTING=OFF;
    sudo cmake --build build/ --target install;
    cd "${TRAVIS_BUILD_DIR}";
    fi
  # Coveralls
  # - pip install --user cpp-coveralls
  # Print some more system information after installing all build tools
  - echo "-------------------- BEGIN SYSTEM INFORMATION --------------------"
  - uname -a
  - lsb_release -a;
  - env
  - which cmake
  - cmake --version
  - which $CC
  - $CC --version
  - which $CXX
  - $CXX --version
  - which ccache
  - ccache --version
  - ccache -s
  - echo "--------------------  END SYSTEM INFORMATION  --------------------"

script:
  - |
    if [ "$STATIC_CHECKS" = "yes" ]; then
    sh ../scripts/travis/clang-format.sh
    else
    mkdir build
    cd build
    cmake -DCMAKE_BUILD_TYPE=${TRAVIS_BUILD_TYPE} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DENABLE_SANITIZE=ON ..
    cmake --build .
    ctest
    fi

# after_success:
#  - coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*"
